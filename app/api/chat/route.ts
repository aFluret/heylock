/**
 * @file: app/api/chat/route.ts
 * @description: API endpoint –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —á–∞—Ç-–∑–∞–ø—Ä–æ—Å–æ–≤
 * @created: 2025-10-27
 */

import { NextRequest, NextResponse } from 'next/server';
import { generateSQL, interpretResults } from '@/lib/ai-service';
import { validateSQL, ensureSafeSQL } from '@/lib/sql-validator';
import { supabaseAdmin } from '@/lib/database';
import { formatChartData, normalizeData, suggestChartType } from '@/lib/response-formatter';
import type { APIRequest, APIResponse } from '@/lib/types';

/**
 * POST /api/chat
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–æ–≤ —Å –≥—Ä–∞—Ñ–∏–∫–∞–º–∏
 */
export async function POST(request: NextRequest) {
  try {
    // 1. –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–ø—Ä–æ—Å–∞
    const body: APIRequest = await request.json();
    const { message } = body;

    if (!message || typeof message !== 'string' || message.trim().length === 0) {
      return NextResponse.json(
        { error: '–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º' },
        { status: 400 }
      );
    }

    console.log('üì© –ü–æ–ª—É—á–µ–Ω –≤–æ–ø—Ä–æ—Å:', message);

    // 2. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SQL —á–µ—Ä–µ–∑ Gemini
    console.log('ü§ñ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SQL —á–µ—Ä–µ–∑ Gemini...');
    const sqlResponse = await generateSQL(message);
    console.log('‚úÖ SQL —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω:', sqlResponse.sql);
    console.log('üìä –¢–∏–ø –≥—Ä–∞—Ñ–∏–∫–∞:', sqlResponse.chartType);

    // 3. –í–∞–ª–∏–¥–∞—Ü–∏—è SQL
    console.log('üîí –í–∞–ª–∏–¥–∞—Ü–∏—è SQL...');
    const validation = validateSQL(sqlResponse.sql);
    
    if (!validation.isValid) {
      console.error('‚ùå SQL –Ω–µ –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é:', validation.errors);
      return NextResponse.json(
        { 
          error: '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω—ã–π SQL –∑–∞–ø—Ä–æ—Å',
          details: validation.errors,
        },
        { status: 400 }
      );
    }

    if (validation.warnings.length > 0) {
      console.warn('‚ö†Ô∏è  SQL –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:', validation.warnings);
    }

    const safeSQL = validation.sql;
    console.log('‚úÖ SQL –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω:', safeSQL);

    // 4. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL –≤ Supabase
    console.log('üíæ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –≤ Supabase...');
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º rpc –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ SQL
    const { data: rpcData, error: rpcError } = await supabaseAdmin.rpc(
      'execute_raw_sql',
      { sql_query: safeSQL }
    );

    let rawData = rpcData;
    let queryError = rpcError;

    // Fallback: –µ—Å–ª–∏ RPC –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥
    if (rpcError && rpcError.message?.includes('function') && rpcError.message?.includes('does not exist')) {
      console.log('‚ö†Ô∏è  RPC —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback –º–µ—Ç–æ–¥...');
      
      const fallbackResult = await executeSimpleQuery(safeSQL);
      rawData = fallbackResult.data;
      queryError = fallbackResult.error;
    }

    if (queryError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SQL:', queryError);
      return NextResponse.json(
        { 
          error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö',
          details: queryError.message,
        },
        { status: 500 }
      );
    }

    const data = normalizeData(rawData || []);
    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${data.length} –∑–∞–ø–∏—Å–µ–π`);

    // 5. –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —á–µ—Ä–µ–∑ Gemini
    console.log('ü§ñ –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —á–µ—Ä–µ–∑ Gemini...');
    const interpretation = await interpretResults(data, message);
    console.log('‚úÖ –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è:', interpretation);

    // 6. –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞
    const chartType = sqlResponse.chartType || suggestChartType(data);
    const chartData = formatChartData(data, chartType);

    // 7. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
    const response: APIResponse = {
      explanation: interpretation,
      chartData,
      chartType,
    };

    console.log('‚úÖ –û—Ç–≤–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ\n');

    return NextResponse.json(response, { status: 200 });

  } catch (error: any) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ /api/chat:', error);
    
    return NextResponse.json(
      { 
        error: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞',
        details: error.message,
      },
      { status: 500 }
    );
  }
}

/**
 * –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ: –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç—ã—Ö SELECT –∑–∞–ø—Ä–æ—Å–æ–≤ —á–µ—Ä–µ–∑ Supabase SDK
 * –í production –≤–µ—Ä—Å–∏–∏ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å RPC —Ñ—É–Ω–∫—Ü–∏—é
 */
async function executeSimpleQuery(sql: string): Promise<{ data: any[] | null; error: any }> {
  try {
    // –ü–∞—Ä—Å–∏–º SQL —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É –∏ —É—Å–ª–æ–≤–∏—è
    const upperSQL = sql.toUpperCase();
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É
    let tableName = 'sessions';
    if (upperSQL.includes('FROM EVENTS')) {
      tableName = 'events';
    }

    // –î–ª—è –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –ø–æ–¥—Ö–æ–¥
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å SQL parser
    
    let query = supabaseAdmin.from(tableName).select('*');
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º LIMIT
    const limitMatch = sql.match(/LIMIT\s+(\d+)/i);
    if (limitMatch) {
      const limit = parseInt(limitMatch[1]);
      query = query.limit(limit);
    }

    const { data, error } = await query;
    
    return { data, error };
  } catch (error: any) {
    return { data: null, error };
  }
}

/**
 * GET /api/chat
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ endpoint
 */
export async function GET() {
  return NextResponse.json({
    status: 'ok',
    message: 'API endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ POST –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤.',
    version: '1.0.0',
  });
}

