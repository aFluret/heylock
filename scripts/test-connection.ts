/**
 * @file: scripts/test-connection.ts
 * @description: –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase
 * @created: 2025-10-27
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: npx tsx scripts/test-connection.ts
 */

import { config } from 'dotenv';
import { createClient } from '@supabase/supabase-js';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config({ path: '.env.local' });

const SUPABASE_URL = process.env.NEXT_PUBLIC_SUPABASE_URL || '';
const SUPABASE_ANON_KEY = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || '';

if (!SUPABASE_URL || !SUPABASE_ANON_KEY) {
  console.error('‚ùå –û—à–∏–±–∫–∞: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è');
  process.exit(1);
}

const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);

async function testConnection() {
  console.log('üîå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase...\n');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ç–∞–±–ª–∏—Ü–µ sessions
    console.log('1Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã sessions...');
    const { data: sessions, error: sessionsError } = await supabase
      .from('sessions')
      .select('*')
      .limit(5);
    
    if (sessionsError) throw sessionsError;
    console.log(`   ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${sessions?.length || 0} —Å–µ—Å—Å–∏–π`);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ç–∞–±–ª–∏—Ü–µ events
    console.log('\n2Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã events...');
    const { data: events, error: eventsError } = await supabase
      .from('events')
      .select('*')
      .limit(5);
    
    if (eventsError) throw eventsError;
    console.log(`   ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${events?.length || 0} —Å–æ–±—ã—Ç–∏–π`);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: JOIN –∑–∞–ø—Ä–æ—Å
    console.log('\n3Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ JOIN –∑–∞–ø—Ä–æ—Å–∞...');
    const { data: joined, error: joinError } = await supabase
      .from('sessions')
      .select(`
        id,
        user_id,
        started_at,
        events (
          id,
          event_name
        )
      `)
      .limit(3);
    
    if (joinError) throw joinError;
    console.log(`   ‚úÖ JOIN —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ–ª—É—á–µ–Ω–æ ${joined?.length || 0} –∑–∞–ø–∏—Å–µ–π`);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ 4: –ê–≥—Ä–µ–≥–∞—Ü–∏—è
    console.log('\n4Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');
    const { count: totalSessions } = await supabase
      .from('sessions')
      .select('*', { count: 'exact', head: true });
    
    const { count: totalEvents } = await supabase
      .from('events')
      .select('*', { count: 'exact', head: true });
    
    console.log(`   ‚úÖ –í—Å–µ–≥–æ —Å–µ—Å—Å–∏–π: ${totalSessions}`);
    console.log(`   ‚úÖ –í—Å–µ–≥–æ —Å–æ–±—ã—Ç–∏–π: ${totalEvents}`);
    
    console.log('\nüéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log('\nüí° –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ. –ú–æ–∂–µ—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ AI-–ª–æ–≥–∏–∫–∏.\n');
    
  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
    process.exit(1);
  }
}

testConnection();

