/**
 * @file: scripts/test-gemini.ts
 * @description: –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Gemini API
 * @created: 2025-10-27
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: npx tsx scripts/test-gemini.ts
 */

import { config } from 'dotenv';
import { testGeminiConnection, generateSQL, interpretResults } from '../lib/ai-service';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config({ path: '.env.local' });

async function main() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Google Gemini API\n');

  try {
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    console.log('1Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Gemini...');
    const isConnected = await testGeminiConnection();
    
    if (!isConnected) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Gemini API');
      process.exit(1);
    }
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!\n');

    // –¢–µ—Å—Ç 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è SQL
    console.log('2Ô∏è‚É£  –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ SQL –∑–∞–ø—Ä–æ—Å–∞...');
    console.log('   –í–æ–ø—Ä–æ—Å: "–ü–æ–∫–∞–∂–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é"\n');
    
    const sqlResponse = await generateSQL('–ü–æ–∫–∞–∂–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é');
    
    console.log('   üìù –†–µ–∑—É–ª—å—Ç–∞—Ç:');
    console.log('   SQL:', sqlResponse.sql);
    console.log('   –¢–∏–ø –≥—Ä–∞—Ñ–∏–∫–∞:', sqlResponse.chartType);
    console.log('   –ü–æ—è—Å–Ω–µ–Ω–∏–µ:', sqlResponse.explanation);
    console.log('   ‚úÖ SQL —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ!\n');

    // –¢–µ—Å—Ç 3: –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    console.log('3Ô∏è‚É£  –¢–µ—Å—Ç –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...');
    
    const mockData = [
      { date: '2025-10-20', users: 12 },
      { date: '2025-10-21', users: 15 },
      { date: '2025-10-22', users: 18 },
      { date: '2025-10-23', users: 14 },
      { date: '2025-10-24', users: 20 },
      { date: '2025-10-25', users: 22 },
      { date: '2025-10-26', users: 19 },
    ];
    
    const interpretation = await interpretResults(
      mockData,
      '–ü–æ–∫–∞–∂–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é'
    );
    
    console.log('   üìä –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è:');
    console.log('   ', interpretation.replace(/\n/g, '\n    '));
    console.log('   ‚úÖ –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞!\n');

    // –¢–µ—Å—Ç 4: –î—Ä—É–≥–æ–π —Ç–∏–ø –≤–æ–ø—Ä–æ—Å–∞
    console.log('4Ô∏è‚É£  –¢–µ—Å—Ç —Å –¥—Ä—É–≥–∏–º –≤–æ–ø—Ä–æ—Å–æ–º...');
    console.log('   –í–æ–ø—Ä–æ—Å: "–ö–∞–∫–∏–µ —Å–æ–±—ã—Ç–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç —á–∞—â–µ –≤—Å–µ–≥–æ?"\n');
    
    const sqlResponse2 = await generateSQL('–ö–∞–∫–∏–µ —Å–æ–±—ã—Ç–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç —á–∞—â–µ –≤—Å–µ–≥–æ?');
    
    console.log('   üìù –†–µ–∑—É–ª—å—Ç–∞—Ç:');
    console.log('   SQL:', sqlResponse2.sql);
    console.log('   –¢–∏–ø –≥—Ä–∞—Ñ–∏–∫–∞:', sqlResponse2.chartType);
    console.log('   ‚úÖ SQL —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ!\n');

    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log('\nüí° Gemini API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –ú–æ–∂–Ω–æ –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º.\n');
    
    process.exit(0);
  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞:', error);
    process.exit(1);
  }
}

main();

